//
//  MergeChainCode.hpp
//  OpenTest
//
//  Created by Yun on 11/17/15.
//  Copyright Â© 2015 Yun. All rights reserved.
//

#ifndef MergeChainCode_hpp
#define MergeChainCode_hpp

#include "Invarible.hpp"
#include "GetChainCode.hpp"

struct chain_code_split_piece;
struct chain_code_point{
    int x;
    int y;
    chain_code_split_piece* next;
    chain_code_point* nextPoint;
    chain_code_point* originalPoint;
    chain_code_point* lastConnectedPoint;
    int whichPiece;
    int chainIndex;
    int type;
    bool visited;
    bool visited2;
    bool goVisited;
    bool special;
    chain_code_point(int xx,int yy): x(xx),y(yy) {}
};

struct chain_code_split_piece{
    vector<int> node;
    chain_code_point* next;
};

struct chain_code_block{
    vector<vector<chain_code_point*>> border;
    vector<chain_code*> unbounded;
    vector<chain_code_point*> bounded;
    vector<chain_code_point*> begins;
};

vector<chain_code*> mergeChainCode(Mat& I);
#endif /* MergeChainCode_hpp */

